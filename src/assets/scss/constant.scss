@charset "UTF-8";
/* basic setting */
$orange: #ff6600;
$orange2: #f18904;
$orange3: #f49f05;
$yellow: #f3cd05;
$blue: #36688d;
$main-black: #000;
$text-black: #1c1c1c;
$grey: #9197a3;
$text-grey: #657786;
$background-grey: #f5f8fa;
$other-grey: #e6ecf0;
$body-font-family: "Roboto", "微軟正黑體", "Microsoft JhengHei";

@mixin square($long, $short, $color, $align, $radius: 0) {
  width: $long;
  height: $short;
  color: $color;
  text-align: $align;
  @if $radius != 0 {
    border-radius: $radius;
  }
  @content;
}

@mixin getStepNums($num) {
  @for $i from 1 through $num {
    &:nth-child(#{$i}) .circle-container::after {
      content: "#{$i}";
    }
  }
}

%standard-boxshadow {
  box-shadow: 3px 0 13px 0 rgba(100, 112, 134, 0.1);
}

.d-none {
  display: none;
}

.d-inline {
  display: inline;
}

.d-inline-block {
  display: inline-block;
}

.d-block {
  display: block;
}

.d-flex {
  display: flex;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-column {
  flex-direction: column;
}

.justify-content-start {
  justify-content: flex-start;
}

.justify-content-end {
  justify-content: flex-end;
}

.justify-content-center {
  justify-content: center;
}

.justify-content-between {
  justify-content: space-between;
}

.justify-content-around {
  justify-content: space-around;
}

.align-content-start {
  align-content: flex-start;
}

.align-content-end {
  align-content: flex-end;
}

.align-content-center {
  align-content: center;
}

.align-items-start {
  align-items: flex-start;
}

.align-items-end {
  align-items: flex-end;
}

.align-items-center {
  align-items: center;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-left {
  text-align: left;
}

.cursor-pointer {
  cursor: pointer;
}

/* spacers */
$sizes: (
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
);

@each $prop, $abbrev in (width: w, height: h) {
  @each $num, $val in $sizes {
    .#{$abbrev}-#{$num} {
      #{$prop}: $val;
    }
  }
}

$spacer: 1rem;
$spacers: (
  0: 0,
  1: (
    $spacer * 0.25,
  ),
  2: (
    $spacer * 0.5,
  ),
  3: (
    $spacer * 0.75,
  ),
  4: $spacer,
  5: (
    $spacer * 1.25,
  ),
  6: (
    $spacer * 1.5,
  ),
  7: (
    $spacer * 1.75,
  ),
  8: (
    $spacer * 2,
  ),
);

@each $prop, $abbrev in (margin: m, padding: p) {
  @each $num, $val in $spacers {
    .#{$abbrev}-#{$num} {
      #{$prop}: $val;
    }
    .#{$abbrev}t-#{$num} {
      #{$prop}-top: $val;
    }
    .#{$abbrev}r-#{$num} {
      #{$prop}-right: $val;
    }
    .#{$abbrev}b-#{$num} {
      #{$prop}-bottom: $val;
    }
    .#{$abbrev}l-#{$num} {
      #{$prop}-left: $val;
    }
    .#{$abbrev}x-#{$num} {
      #{$prop}-left: $val;
      #{$prop}-right: $val;
    }
    .#{$abbrev}y-#{$num} {
      #{$prop}-top: $val;
      #{$prop}-bottom: $val;
    }
  }
}
